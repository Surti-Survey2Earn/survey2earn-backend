services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: surti
    environment:
      POSTGRES_USER: maziazi
      POSTGRES_PASSWORD: "maziazi123"
      POSTGRES_DB: surti_db
      # Remove auth requirement for development
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Comment out init script jika masih bermasalah
      # - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - surti_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U maziazi -d surti_db"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: surti_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - surti_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: surti_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@surti.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - surti_network
    profiles:
      - admin

volumes:
  postgres_data:
  redis_data:

networks:
  surti_network:
    driver: bridge